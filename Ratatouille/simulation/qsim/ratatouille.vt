// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "11/20/2024 19:55:10"
                                                                        
// Verilog Self-Checking Test Bench (with test vectors) for design :    Celda
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Celda_vlg_sample_tst(
	Adelante,
	Atras,
	CLK,
	Derecha,
	hab_escrit,
	Izquierda,
	Muro_Ad,
	Muro_At,
	Muro_Der,
	Muro_Izq,
	Reset,
	sampler_tx
);
input [2:0] Adelante;
input [2:0] Atras;
input  CLK;
input [2:0] Derecha;
input [3:0] hab_escrit;
input [2:0] Izquierda;
input  Muro_Ad;
input  Muro_At;
input  Muro_Der;
input  Muro_Izq;
input  Reset;
output sampler_tx;

reg sample;
time current_time;
always @(Adelante or Atras or CLK or Derecha or hab_escrit or Izquierda or Muro_Ad or Muro_At or Muro_Der or Muro_Izq or Reset)
                                                                                
begin                                                 
 if ($realtime > 0)                                   
 begin                                                
	if ($realtime == 0 || $realtime != current_time)  
	begin									          
		if (sample === 1'bx)                          
			sample = 0;                               
		else                                          
			sample = ~sample;                         
	end										          
	current_time = $realtime;					      
 end                                                  
end                                                   

assign sampler_tx = sample;
endmodule

module Celda_vlg_check_tst (
	muros_ady,
	Peso,
	sampler_rx
);
input [3:0] muros_ady;
input [2:0] Peso;
input sampler_rx;

reg [3:0] muros_ady_expected;
reg [2:0] Peso_expected;

reg [3:0] muros_ady_prev;
reg [2:0] Peso_prev;

reg [3:0] muros_ady_expected_prev;
reg [2:0] Peso_expected_prev;

reg [3:0] last_muros_ady_exp;
reg [2:0] last_Peso_exp;

reg trigger;

integer i;
integer nummismatches;

reg [1:2] on_first_change ;


initial
begin
trigger = 0;
i = 0;
nummismatches = 0;
on_first_change = 2'b1;
end

// update real /o prevs

always @(trigger)
begin
	muros_ady_prev = muros_ady;
	Peso_prev = Peso;
end

// update expected /o prevs

always @(trigger)
begin
	muros_ady_expected_prev = muros_ady_expected;
	Peso_expected_prev = Peso_expected;
end


// expected muros_ady[ 3 ]
initial
begin
	muros_ady_expected[3] = 1'bX;
end 
// expected muros_ady[ 2 ]
initial
begin
	muros_ady_expected[2] = 1'bX;
end 
// expected muros_ady[ 1 ]
initial
begin
	muros_ady_expected[1] = 1'bX;
end 
// expected muros_ady[ 0 ]
initial
begin
	muros_ady_expected[0] = 1'bX;
end 
// expected Peso[ 2 ]
initial
begin
	Peso_expected[2] = 1'bX;
end 
// expected Peso[ 1 ]
initial
begin
	Peso_expected[1] = 1'bX;
end 
// expected Peso[ 0 ]
initial
begin
	Peso_expected[0] = 1'bX;
end 
// generate trigger
always @(muros_ady_expected or muros_ady or Peso_expected or Peso)
begin
	trigger <= ~trigger;
end

always @(posedge sampler_rx or negedge sampler_rx)
begin
`ifdef debug_tbench
	$display("Scanning pattern %d @time = %t",i,$realtime );
	i = i + 1;
	$display("| expected muros_ady = %b | expected Peso = %b | ",muros_ady_expected_prev,Peso_expected_prev);
	$display("| real muros_ady = %b | real Peso = %b | ",muros_ady_prev,Peso_prev);
`endif
	if (
		( muros_ady_expected_prev[0] !== 1'bx ) && ( muros_ady_prev[0] !== muros_ady_expected_prev[0] )
		&& ((muros_ady_expected_prev[0] !== last_muros_ady_exp[0]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port muros_ady[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", muros_ady_expected_prev);
		$display ("     Real value = %b", muros_ady_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_muros_ady_exp[0] = muros_ady_expected_prev[0];
	end
	if (
		( muros_ady_expected_prev[1] !== 1'bx ) && ( muros_ady_prev[1] !== muros_ady_expected_prev[1] )
		&& ((muros_ady_expected_prev[1] !== last_muros_ady_exp[1]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port muros_ady[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", muros_ady_expected_prev);
		$display ("     Real value = %b", muros_ady_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_muros_ady_exp[1] = muros_ady_expected_prev[1];
	end
	if (
		( muros_ady_expected_prev[2] !== 1'bx ) && ( muros_ady_prev[2] !== muros_ady_expected_prev[2] )
		&& ((muros_ady_expected_prev[2] !== last_muros_ady_exp[2]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port muros_ady[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", muros_ady_expected_prev);
		$display ("     Real value = %b", muros_ady_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_muros_ady_exp[2] = muros_ady_expected_prev[2];
	end
	if (
		( muros_ady_expected_prev[3] !== 1'bx ) && ( muros_ady_prev[3] !== muros_ady_expected_prev[3] )
		&& ((muros_ady_expected_prev[3] !== last_muros_ady_exp[3]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port muros_ady[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", muros_ady_expected_prev);
		$display ("     Real value = %b", muros_ady_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_muros_ady_exp[3] = muros_ady_expected_prev[3];
	end
	if (
		( Peso_expected_prev[0] !== 1'bx ) && ( Peso_prev[0] !== Peso_expected_prev[0] )
		&& ((Peso_expected_prev[0] !== last_Peso_exp[0]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port Peso[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", Peso_expected_prev);
		$display ("     Real value = %b", Peso_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_Peso_exp[0] = Peso_expected_prev[0];
	end
	if (
		( Peso_expected_prev[1] !== 1'bx ) && ( Peso_prev[1] !== Peso_expected_prev[1] )
		&& ((Peso_expected_prev[1] !== last_Peso_exp[1]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port Peso[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", Peso_expected_prev);
		$display ("     Real value = %b", Peso_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_Peso_exp[1] = Peso_expected_prev[1];
	end
	if (
		( Peso_expected_prev[2] !== 1'bx ) && ( Peso_prev[2] !== Peso_expected_prev[2] )
		&& ((Peso_expected_prev[2] !== last_Peso_exp[2]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port Peso[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", Peso_expected_prev);
		$display ("     Real value = %b", Peso_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_Peso_exp[2] = Peso_expected_prev[2];
	end

	trigger <= ~trigger;
end
initial 

begin 
$timeformat(-12,3," ps",6);
#1000000;
if (nummismatches > 0)
	$display ("%d mismatched vectors : Simulation failed !",nummismatches);
else
	$display ("Simulation passed !");
$finish;
end 
endmodule

module Celda_vlg_vec_tst();
// constants                                           
// general purpose registers
reg [2:0] Adelante;
reg [2:0] Atras;
reg CLK;
reg [2:0] Derecha;
reg [3:0] hab_escrit;
reg [2:0] Izquierda;
reg Muro_Ad;
reg Muro_At;
reg Muro_Der;
reg Muro_Izq;
reg Reset;
// wires                                               
wire [3:0] muros_ady;
wire [2:0] Peso;

wire sampler;                             

// assign statements (if any)                          
Celda i1 (
// port map - connection between master ports and signals/registers   
	.Adelante(Adelante),
	.Atras(Atras),
	.CLK(CLK),
	.Derecha(Derecha),
	.hab_escrit(hab_escrit),
	.Izquierda(Izquierda),
	.Muro_Ad(Muro_Ad),
	.Muro_At(Muro_At),
	.Muro_Der(Muro_Der),
	.Muro_Izq(Muro_Izq),
	.muros_ady(muros_ady),
	.Peso(Peso),
	.Reset(Reset)
);
// Adelante[ 2 ]
initial
begin
	Adelante[2] = 1'b0;
end 
// Adelante[ 1 ]
initial
begin
	Adelante[1] = 1'b1;
end 
// Adelante[ 0 ]
initial
begin
	Adelante[0] = 1'b1;
end 
// Atras[ 2 ]
initial
begin
	Atras[2] = 1'b1;
end 
// Atras[ 1 ]
initial
begin
	Atras[1] = 1'b0;
end 
// Atras[ 0 ]
initial
begin
	Atras[0] = 1'b1;
end 

// CLK
always
begin
	CLK = 1'b0;
	CLK = #5000 1'b1;
	#5000;
end 
// Derecha[ 2 ]
initial
begin
	Derecha[2] = 1'b1;
end 
// Derecha[ 1 ]
initial
begin
	Derecha[1] = 1'b0;
end 
// Derecha[ 0 ]
initial
begin
	Derecha[0] = 1'b1;
end 
// hab_escrit[ 3 ]
initial
begin
	hab_escrit[3] = 1'b1;
end 
// hab_escrit[ 2 ]
initial
begin
	hab_escrit[2] = 1'b0;
end 
// hab_escrit[ 1 ]
initial
begin
	hab_escrit[1] = 1'b0;
end 
// hab_escrit[ 0 ]
initial
begin
	hab_escrit[0] = 1'b1;
end 
// Izquierda[ 2 ]
initial
begin
	Izquierda[2] = 1'b0;
end 
// Izquierda[ 1 ]
initial
begin
	Izquierda[1] = 1'b1;
end 
// Izquierda[ 0 ]
initial
begin
	Izquierda[0] = 1'b1;
end 

// Muro_Ad
initial
begin
	Muro_Ad = 1'b1;
end 

// Muro_At
initial
begin
	Muro_At = 1'b1;
	Muro_At = #3960 1'b0;
	Muro_At = #10200 1'b1;
	Muro_At = #5840 1'b0;
	Muro_At = #11943 1'b1;
	Muro_At = #7400 1'b0;
	Muro_At = #1042 1'b1;
	# 3199;
	repeat(2)
	begin
		Muro_At = 1'b0;
		Muro_At = #3467 1'b1;
		# 3199;
	end
	Muro_At = 1'b0;
	Muro_At = #5763 1'b1;
	Muro_At = #3900 1'b0;
	Muro_At = #6100 1'b1;
	Muro_At = #3900 1'b0;
	Muro_At = #4479 1'b1;
	Muro_At = #4800 1'b0;
	Muro_At = #9417 1'b1;
	Muro_At = #3600 1'b0;
	Muro_At = #2505 1'b1;
	Muro_At = #2650 1'b0;
	Muro_At = #2350 1'b1;
	Muro_At = #2650 1'b0;
	Muro_At = #970 1'b1;
	Muro_At = #3104 1'b0;
	Muro_At = #6700 1'b1;
	Muro_At = #196 1'b0;
	Muro_At = #408 1'b1;
	Muro_At = #5800 1'b0;
	Muro_At = #4200 1'b1;
	Muro_At = #5800 1'b0;
	Muro_At = #3792 1'b1;
	Muro_At = #5405 1'b0;
	Muro_At = #4400 1'b1;
	Muro_At = #9857 1'b0;
	Muro_At = #10200 1'b1;
	Muro_At = #138 1'b0;
	Muro_At = #712 1'b1;
	# 2133;
	repeat(2)
	begin
		Muro_At = 1'b0;
		Muro_At = #4533 1'b1;
		# 2133;
	end
	Muro_At = 1'b0;
	Muro_At = #3823 1'b1;
	Muro_At = #1984 1'b0;
	Muro_At = #6700 1'b1;
	Muro_At = #3300 1'b0;
	Muro_At = #6700 1'b1;
	Muro_At = #1316 1'b0;
	Muro_At = #284 1'b1;
	Muro_At = #2100 1'b0;
	Muro_At = #2900 1'b1;
	Muro_At = #2100 1'b0;
	Muro_At = #2616 1'b1;
	Muro_At = #220 1'b0;
	Muro_At = #6000 1'b1;
	Muro_At = #6215 1'b0;
	Muro_At = #2500 1'b1;
	Muro_At = #2500 1'b0;
	Muro_At = #2500 1'b1;
	Muro_At = #319 1'b0;
	Muro_At = #1600 1'b1;
	Muro_At = #1733 1'b0;
	Muro_At = #1600 1'b1;
	Muro_At = #1733 1'b0;
	Muro_At = #1600 1'b1;
	Muro_At = #1480 1'b0;
	Muro_At = #2475 1'b1;
	Muro_At = #4200 1'b0;
	Muro_At = #5800 1'b1;
	Muro_At = #4200 1'b0;
	Muro_At = #6416 1'b1;
	# 2133;
	repeat(2)
	begin
		Muro_At = 1'b0;
		Muro_At = #4533 1'b1;
		# 2133;
	end
	Muro_At = 1'b0;
	Muro_At = #6042 1'b1;
	Muro_At = #3100 1'b0;
	Muro_At = #5729 1'b1;
	# 2466;
	repeat(2)
	begin
		Muro_At = 1'b0;
		Muro_At = #4200 1'b1;
		# 2466;
	end
	Muro_At = 1'b0;
	Muro_At = #6601 1'b1;
	Muro_At = #3200 1'b0;
	Muro_At = #6800 1'b1;
	Muro_At = #3200 1'b0;
	Muro_At = #1298 1'b1;
	# 1366;
	repeat(2)
	begin
		Muro_At = 1'b0;
		Muro_At = #1967 1'b1;
		# 1366;
	end
	Muro_At = 1'b0;
	Muro_At = #1644 1'b1;
	Muro_At = #9148 1'b0;
	Muro_At = #10800 1'b1;
	Muro_At = #52 1'b0;
	Muro_At = #3906 1'b1;
	Muro_At = #3700 1'b0;
	Muro_At = #6300 1'b1;
	Muro_At = #3700 1'b0;
	Muro_At = #7349 1'b1;
	Muro_At = #9600 1'b0;
	Muro_At = #6766 1'b1;
	# 1599;
	repeat(2)
	begin
		Muro_At = 1'b0;
		Muro_At = #1734 1'b1;
		# 1599;
	end
	Muro_At = 1'b0;
	Muro_At = #986 1'b1;
	# 2466;
	repeat(2)
	begin
		Muro_At = 1'b0;
		Muro_At = #4200 1'b1;
		# 2466;
	end
	Muro_At = 1'b0;
	Muro_At = #10153 1'b1;
	Muro_At = #10800 1'b0;
	Muro_At = #3265 1'b1;
	# 1566;
	repeat(2)
	begin
		Muro_At = 1'b0;
		Muro_At = #1767 1'b1;
		# 1566;
	end
	Muro_At = 1'b0;
	Muro_At = #4259 1'b1;
	# 2599;
	repeat(2)
	begin
		Muro_At = 1'b0;
		Muro_At = #4067 1'b1;
		# 2599;
	end
	Muro_At = 1'b0;
	Muro_At = #990 1'b1;
	# 1275;
	repeat(2)
	begin
		Muro_At = 1'b0;
		Muro_At = #4533 1'b1;
		# 2133;
	end
	Muro_At = 1'b0;
	Muro_At = #4533 1'b1;
	Muro_At = #860 1'b0;
	Muro_At = #1595 1'b1;
	# 1299;
	repeat(2)
	begin
		Muro_At = 1'b0;
		Muro_At = #2034 1'b1;
		# 1299;
	end
	Muro_At = 1'b0;
	Muro_At = #2584 1'b1;
	Muro_At = #3900 1'b0;
	Muro_At = #6100 1'b1;
	Muro_At = #3900 1'b0;
	Muro_At = #3956 1'b1;
	Muro_At = #1806 1'b0;
	Muro_At = #5400 1'b1;
	Muro_At = #4600 1'b0;
	Muro_At = #5400 1'b1;
	Muro_At = #2794 1'b0;
	Muro_At = #1293 1'b1;
	Muro_At = #8400 1'b0;
	Muro_At = #10307 1'b1;
	Muro_At = #2457 1'b0;
	Muro_At = #11000 1'b1;
	Muro_At = #6725 1'b0;
	Muro_At = #2550 1'b1;
	Muro_At = #2450 1'b0;
	Muro_At = #2550 1'b1;
	Muro_At = #4262 1'b0;
	Muro_At = #10200 1'b1;
	Muro_At = #7806 1'b0;
	Muro_At = #743 1'b1;
	# 2266;
	repeat(2)
	begin
		Muro_At = 1'b0;
		Muro_At = #4400 1'b1;
		# 2266;
	end
	Muro_At = 1'b0;
	Muro_At = #5237 1'b1;
	Muro_At = #2250 1'b0;
	Muro_At = #2750 1'b1;
	Muro_At = #2250 1'b0;
	Muro_At = #1172 1'b1;
	Muro_At = #973 1'b0;
	Muro_At = #2500 1'b1;
	Muro_At = #2500 1'b0;
	Muro_At = #2500 1'b1;
	Muro_At = #1729 1'b0;
	Muro_At = #5200 1'b1;
	Muro_At = #4800 1'b0;
	Muro_At = #5200 1'b1;
	Muro_At = #4598 1'b0;
	Muro_At = #3288 1'b1;
	Muro_At = #6400 1'b0;
	Muro_At = #10793 1'b1;
	Muro_At = #1750 1'b0;
	Muro_At = #3250 1'b1;
	Muro_At = #1750 1'b0;
	Muro_At = #3794 1'b1;
	# 1133;
	repeat(2)
	begin
		Muro_At = 1'b0;
		Muro_At = #2200 1'b1;
		# 1133;
	end
	Muro_At = 1'b0;
	Muro_At = #1176 1'b1;
	Muro_At = #4649 1'b0;
	Muro_At = #10200 1'b1;
	Muro_At = #7090 1'b0;
	Muro_At = #3467 1'b1;
	Muro_At = #3199 1'b0;
	Muro_At = #3467 1'b1;
	Muro_At = #3199 1'b0;
	Muro_At = #3467 1'b1;
	Muro_At = #1262 1'b0;
	Muro_At = #1866 1'b1;
	# 1066;
	repeat(2)
	begin
		Muro_At = 1'b0;
		Muro_At = #2267 1'b1;
		# 1066;
	end
	Muro_At = 1'b0;
	Muro_At = #414 1'b1;
	# 1999;
	repeat(2)
	begin
		Muro_At = 1'b0;
		Muro_At = #1334 1'b1;
		# 1999;
	end
	Muro_At = 1'b0;
	Muro_At = #1323 1'b1;
	Muro_At = #2820 1'b0;
	Muro_At = #13200 1'b1;
	Muro_At = #5697 1'b0;
	Muro_At = #4700 1'b1;
	Muro_At = #3583 1'b0;
	Muro_At = #262 1'b1;
	# 999;
	repeat(2)
	begin
		Muro_At = 1'b0;
		Muro_At = #2334 1'b1;
		# 999;
	end
	Muro_At = 1'b0;
	Muro_At = #2598 1'b1;
	Muro_At = #4400 1'b0;
	Muro_At = #5600 1'b1;
	Muro_At = #4400 1'b0;
	Muro_At = #9396 1'b1;
	Muro_At = #7000 1'b0;
	Muro_At = #8679 1'b1;
	Muro_At = #3465 1'b0;
	Muro_At = #5300 1'b1;
	Muro_At = #1482 1'b0;
	Muro_At = #2800 1'b1;
	Muro_At = #3866 1'b0;
	Muro_At = #2800 1'b1;
	Muro_At = #3866 1'b0;
	Muro_At = #2800 1'b1;
	Muro_At = #5497 1'b0;
	Muro_At = #6300 1'b1;
	Muro_At = #1824 1'b0;
	Muro_At = #1217 1'b1;
	# 1866;
	repeat(2)
	begin
		Muro_At = 1'b0;
		Muro_At = #1467 1'b1;
		# 1866;
	end
	Muro_At = 1'b0;
	Muro_At = #1288 1'b1;
	Muro_At = #5200 1'b0;
	Muro_At = #4910 1'b1;
	Muro_At = #5000 1'b0;
	Muro_At = #3853 1'b1;
	Muro_At = #401 1'b0;
	Muro_At = #2600 1'b1;
	Muro_At = #2400 1'b0;
	Muro_At = #2600 1'b1;
	Muro_At = #1999 1'b0;
	Muro_At = #1975 1'b1;
	Muro_At = #2500 1'b0;
	Muro_At = #2500 1'b1;
	Muro_At = #2500 1'b0;
	Muro_At = #525 1'b1;
	Muro_At = #1406 1'b0;
	Muro_At = #5300 1'b1;
	Muro_At = #3294 1'b0;
	Muro_At = #1699 1'b1;
	Muro_At = #3900 1'b0;
	Muro_At = #4401 1'b1;
	Muro_At = #1673 1'b0;
	Muro_At = #5100 1'b1;
	Muro_At = #4900 1'b0;
	Muro_At = #5100 1'b1;
end 

// Muro_Der
initial
begin
	Muro_Der = 1'b0;
end 

// Muro_Izq
initial
begin
	Muro_Izq = 1'b1;
	Muro_Izq = #3135 1'b0;
	Muro_Izq = #13800 1'b1;
	Muro_Izq = #3781 1'b0;
	Muro_Izq = #5500 1'b1;
	Muro_Izq = #6004 1'b0;
	Muro_Izq = #13600 1'b1;
	Muro_Izq = #4180 1'b0;
	Muro_Izq = #1072 1'b1;
	Muro_Izq = #5400 1'b0;
	Muro_Izq = #4600 1'b1;
	Muro_Izq = #5400 1'b0;
	Muro_Izq = #4361 1'b1;
	Muro_Izq = #10400 1'b0;
	Muro_Izq = #8767 1'b1;
	Muro_Izq = #3973 1'b0;
	Muro_Izq = #5500 1'b1;
	Muro_Izq = #4500 1'b0;
	Muro_Izq = #5500 1'b1;
	Muro_Izq = #527 1'b0;
	Muro_Izq = #5647 1'b1;
	Muro_Izq = #4000 1'b0;
	Muro_Izq = #6000 1'b1;
	Muro_Izq = #4000 1'b0;
	Muro_Izq = #353 1'b1;
	# 277;
	repeat(2)
	begin
		Muro_Izq = 1'b0;
		Muro_Izq = #4467 1'b1;
		# 2199;
	end
	Muro_Izq = 1'b0;
	Muro_Izq = #4467 1'b1;
	Muro_Izq = #1924 1'b0;
	Muro_Izq = #7450 1'b1;
	Muro_Izq = #6000 1'b0;
	Muro_Izq = #6550 1'b1;
	Muro_Izq = #1195 1'b0;
	Muro_Izq = #6100 1'b1;
	Muro_Izq = #2705 1'b0;
	Muro_Izq = #3761 1'b1;
	# 2599;
	repeat(2)
	begin
		Muro_Izq = 1'b0;
		Muro_Izq = #4067 1'b1;
		# 2599;
	end
	Muro_Izq = 1'b0;
	Muro_Izq = #1901 1'b1;
	# 1333;
	repeat(2)
	begin
		Muro_Izq = 1'b0;
		Muro_Izq = #2000 1'b1;
		# 1333;
	end
	Muro_Izq = 1'b0;
	Muro_Izq = #3051 1'b1;
	Muro_Izq = #3100 1'b0;
	Muro_Izq = #4257 1'b1;
	Muro_Izq = #1677 1'b0;
	Muro_Izq = #2850 1'b1;
	Muro_Izq = #2150 1'b0;
	Muro_Izq = #2850 1'b1;
	Muro_Izq = #4207 1'b0;
	Muro_Izq = #5400 1'b1;
	Muro_Izq = #2138 1'b0;
	Muro_Izq = #7000 1'b1;
	Muro_Izq = #3000 1'b0;
	Muro_Izq = #7000 1'b1;
	Muro_Izq = #1728 1'b0;
	Muro_Izq = #82 1'b1;
	# 1766;
	repeat(2)
	begin
		Muro_Izq = 1'b0;
		Muro_Izq = #1567 1'b1;
		# 1766;
	end
	Muro_Izq = 1'b0;
	Muro_Izq = #4074 1'b1;
	Muro_Izq = #2250 1'b0;
	Muro_Izq = #2750 1'b1;
	Muro_Izq = #2250 1'b0;
	Muro_Izq = #162 1'b1;
	# 890;
	repeat(2)
	begin
		Muro_Izq = 1'b0;
		Muro_Izq = #3533 1'b1;
		# 3133;
	end
	Muro_Izq = 1'b0;
	Muro_Izq = #3533 1'b1;
	Muro_Izq = #2245 1'b0;
	Muro_Izq = #487 1'b1;
	Muro_Izq = #2900 1'b0;
	Muro_Izq = #2100 1'b1;
	Muro_Izq = #2900 1'b0;
	Muro_Izq = #1658 1'b1;
	Muro_Izq = #3700 1'b0;
	Muro_Izq = #8100 1'b1;
	Muro_Izq = #4400 1'b0;
	Muro_Izq = #5600 1'b1;
	Muro_Izq = #4400 1'b0;
	Muro_Izq = #3941 1'b1;
	# 2199;
	repeat(2)
	begin
		Muro_Izq = 1'b0;
		Muro_Izq = #4467 1'b1;
		# 2199;
	end
	Muro_Izq = 1'b0;
	Muro_Izq = #4283 1'b1;
	Muro_Izq = #2311 1'b0;
	Muro_Izq = #6300 1'b1;
	Muro_Izq = #3556 1'b0;
	Muro_Izq = #6300 1'b1;
	Muro_Izq = #1533 1'b0;
	Muro_Izq = #1085 1'b1;
	# 1466;
	repeat(2)
	begin
		Muro_Izq = 1'b0;
		Muro_Izq = #1867 1'b1;
		# 1466;
	end
	Muro_Izq = 1'b0;
	Muro_Izq = #3718 1'b1;
	Muro_Izq = #3000 1'b0;
	Muro_Izq = #7000 1'b1;
	Muro_Izq = #3000 1'b0;
	Muro_Izq = #5384 1'b1;
	Muro_Izq = #4200 1'b0;
	Muro_Izq = #5800 1'b1;
	Muro_Izq = #4200 1'b0;
	Muro_Izq = #4769 1'b1;
	# 1233;
	repeat(2)
	begin
		Muro_Izq = 1'b0;
		Muro_Izq = #2100 1'b1;
		# 1233;
	end
	Muro_Izq = 1'b0;
	Muro_Izq = #2119 1'b1;
	Muro_Izq = #3900 1'b0;
	Muro_Izq = #5794 1'b1;
	Muro_Izq = #3461 1'b0;
	Muro_Izq = #8200 1'b1;
	Muro_Izq = #8339 1'b0;
	Muro_Izq = #3684 1'b1;
	Muro_Izq = #3300 1'b0;
	Muro_Izq = #3016 1'b1;
	Muro_Izq = #7593 1'b0;
	Muro_Izq = #10000 1'b1;
	Muro_Izq = #3354 1'b0;
	Muro_Izq = #5300 1'b1;
	Muro_Izq = #4700 1'b0;
	Muro_Izq = #5300 1'b1;
	Muro_Izq = #4188 1'b0;
	Muro_Izq = #1834 1'b1;
	Muro_Izq = #1499 1'b0;
	Muro_Izq = #1834 1'b1;
	Muro_Izq = #1499 1'b0;
	Muro_Izq = #1834 1'b1;
	Muro_Izq = #1065 1'b0;
	Muro_Izq = #2782 1'b1;
	# 2733;
	repeat(2)
	begin
		Muro_Izq = 1'b0;
		Muro_Izq = #3933 1'b1;
		# 2733;
	end
	Muro_Izq = 1'b0;
	Muro_Izq = #1153 1'b1;
	Muro_Izq = #830 1'b0;
	Muro_Izq = #2600 1'b1;
	Muro_Izq = #2400 1'b0;
	Muro_Izq = #2600 1'b1;
	Muro_Izq = #2197 1'b0;
	Muro_Izq = #2134 1'b1;
	Muro_Izq = #1199 1'b0;
	Muro_Izq = #2134 1'b1;
	Muro_Izq = #1199 1'b0;
	Muro_Izq = #2134 1'b1;
	Muro_Izq = #2529 1'b0;
	Muro_Izq = #4333 1'b1;
	Muro_Izq = #2333 1'b0;
	Muro_Izq = #4333 1'b1;
	Muro_Izq = #2333 1'b0;
	Muro_Izq = #4333 1'b1;
	Muro_Izq = #379 1'b0;
	Muro_Izq = #1327 1'b1;
	# 2199;
	repeat(2)
	begin
		Muro_Izq = 1'b0;
		Muro_Izq = #4467 1'b1;
		# 2199;
	end
	Muro_Izq = 1'b0;
	Muro_Izq = #4228 1'b1;
	Muro_Izq = #5700 1'b0;
	Muro_Izq = #3997 1'b1;
	# 2199;
	repeat(2)
	begin
		Muro_Izq = 1'b0;
		Muro_Izq = #4467 1'b1;
		# 2199;
	end
	Muro_Izq = 1'b0;
	Muro_Izq = #5310 1'b1;
	Muro_Izq = #1600 1'b0;
	Muro_Izq = #3400 1'b1;
	Muro_Izq = #1600 1'b0;
	Muro_Izq = #1776 1'b1;
	# 1437;
	repeat(2)
	begin
		Muro_Izq = 1'b0;
		Muro_Izq = #4200 1'b1;
		# 2466;
	end
	Muro_Izq = 1'b0;
	Muro_Izq = #4200 1'b1;
	Muro_Izq = #3809 1'b0;
	Muro_Izq = #14000 1'b1;
	Muro_Izq = #3222 1'b0;
	Muro_Izq = #6083 1'b1;
	Muro_Izq = #3000 1'b0;
	Muro_Izq = #7000 1'b1;
	Muro_Izq = #3000 1'b0;
	Muro_Izq = #12223 1'b1;
	Muro_Izq = #7600 1'b0;
	Muro_Izq = #1094 1'b1;
	Muro_Izq = #2035 1'b0;
	Muro_Izq = #4300 1'b1;
	Muro_Izq = #5700 1'b0;
	Muro_Izq = #4300 1'b1;
	Muro_Izq = #3665 1'b0;
	Muro_Izq = #3473 1'b1;
	# 2066;
	repeat(2)
	begin
		Muro_Izq = 1'b0;
		Muro_Izq = #4600 1'b1;
		# 2066;
	end
	Muro_Izq = 1'b0;
	Muro_Izq = #1276 1'b1;
	# 1066;
	repeat(2)
	begin
		Muro_Izq = 1'b0;
		Muro_Izq = #2267 1'b1;
		# 1066;
	end
	Muro_Izq = 1'b0;
	Muro_Izq = #2121 1'b1;
	# 1961;
	repeat(2)
	begin
		Muro_Izq = 1'b0;
		Muro_Izq = #3800 1'b1;
		# 2866;
	end
	Muro_Izq = 1'b0;
	Muro_Izq = #3800 1'b1;
	Muro_Izq = #1873 1'b0;
	Muro_Izq = #2267 1'b1;
	Muro_Izq = #1066 1'b0;
	Muro_Izq = #2267 1'b1;
	Muro_Izq = #1066 1'b0;
	Muro_Izq = #2267 1'b1;
	Muro_Izq = #101 1'b0;
	Muro_Izq = #1578 1'b1;
	Muro_Izq = #9600 1'b0;
	Muro_Izq = #8822 1'b1;
	Muro_Izq = #2253 1'b0;
	Muro_Izq = #5700 1'b1;
	Muro_Izq = #4300 1'b0;
	Muro_Izq = #5700 1'b1;
	Muro_Izq = #2047 1'b0;
	Muro_Izq = #288 1'b1;
	# 1066;
	repeat(2)
	begin
		Muro_Izq = 1'b0;
		Muro_Izq = #2267 1'b1;
		# 1066;
	end
	Muro_Izq = 1'b0;
	Muro_Izq = #1980 1'b1;
	# 1668;
	repeat(2)
	begin
		Muro_Izq = 1'b0;
		Muro_Izq = #4267 1'b1;
		# 2399;
	end
	Muro_Izq = 1'b0;
	Muro_Izq = #4267 1'b1;
	Muro_Izq = #5288 1'b0;
	Muro_Izq = #5200 1'b1;
	Muro_Izq = #4800 1'b0;
	Muro_Izq = #5200 1'b1;
	Muro_Izq = #245 1'b0;
	Muro_Izq = #1649 1'b1;
	# 1199;
	repeat(2)
	begin
		Muro_Izq = 1'b0;
		Muro_Izq = #2134 1'b1;
		# 1199;
	end
	Muro_Izq = 1'b0;
	Muro_Izq = #708 1'b1;
	# 1199;
	repeat(2)
	begin
		Muro_Izq = 1'b0;
		Muro_Izq = #2134 1'b1;
		# 1199;
	end
	Muro_Izq = 1'b0;
	Muro_Izq = #3198 1'b1;
	Muro_Izq = #1800 1'b0;
	Muro_Izq = #3200 1'b1;
	Muro_Izq = #1800 1'b0;
	Muro_Izq = #1915 1'b1;
	# 869;
	repeat(2)
	begin
		Muro_Izq = 1'b0;
		Muro_Izq = #1967 1'b1;
		# 1366;
	end
	Muro_Izq = 1'b0;
	Muro_Izq = #1967 1'b1;
	Muro_Izq = #498 1'b0;
	Muro_Izq = #5097 1'b1;
	Muro_Izq = #4000 1'b0;
	Muro_Izq = #6000 1'b1;
	Muro_Izq = #4000 1'b0;
	Muro_Izq = #903 1'b1;
	# 696;
	repeat(2)
	begin
		Muro_Izq = 1'b0;
		Muro_Izq = #1700 1'b1;
		# 1633;
	end
	Muro_Izq = 1'b0;
	Muro_Izq = #1700 1'b1;
	Muro_Izq = #2738 1'b0;
	Muro_Izq = #5900 1'b1;
	Muro_Izq = #4100 1'b0;
	Muro_Izq = #5900 1'b1;
	Muro_Izq = #2300 1'b0;
	Muro_Izq = #3447 1'b1;
	Muro_Izq = #4900 1'b0;
end 

// Reset
initial
begin
	Reset = 1'b0;
end 

Celda_vlg_sample_tst tb_sample (
	.Adelante(Adelante),
	.Atras(Atras),
	.CLK(CLK),
	.Derecha(Derecha),
	.hab_escrit(hab_escrit),
	.Izquierda(Izquierda),
	.Muro_Ad(Muro_Ad),
	.Muro_At(Muro_At),
	.Muro_Der(Muro_Der),
	.Muro_Izq(Muro_Izq),
	.Reset(Reset),
	.sampler_tx(sampler)
);

Celda_vlg_check_tst tb_out(
	.muros_ady(muros_ady),
	.Peso(Peso),
	.sampler_rx(sampler)
);
endmodule

