// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "11/26/2024 14:46:25"

// 
// Device: Altera EP4CE22F17C6 Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module sumador_habilitacion (
	A,
	EN,
	S);
input 	[2:0] A;
input 	EN;
output 	[2:0] S;

// Design Ports Information
// S[0]	=>  Location: PIN_G1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// S[1]	=>  Location: PIN_P2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// S[2]	=>  Location: PIN_N2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A[0]	=>  Location: PIN_K5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// EN	=>  Location: PIN_L2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A[1]	=>  Location: PIN_N1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A[2]	=>  Location: PIN_L3,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \S[0]~output_o ;
wire \S[1]~output_o ;
wire \S[2]~output_o ;
wire \A[0]~input_o ;
wire \EN~input_o ;
wire \S~0_combout ;
wire \A[1]~input_o ;
wire \S~1_combout ;
wire \A[2]~input_o ;
wire \S~2_combout ;


// Location: IOOBUF_X0_Y23_N23
cycloneive_io_obuf \S[0]~output (
	.i(\S~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[0]~output .bus_hold = "false";
defparam \S[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y4_N16
cycloneive_io_obuf \S[1]~output (
	.i(\S~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[1]~output .bus_hold = "false";
defparam \S[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y8_N23
cycloneive_io_obuf \S[2]~output (
	.i(\S~2_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[2]~output .bus_hold = "false";
defparam \S[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y7_N8
cycloneive_io_ibuf \A[0]~input (
	.i(A[0]),
	.ibar(gnd),
	.o(\A[0]~input_o ));
// synopsys translate_off
defparam \A[0]~input .bus_hold = "false";
defparam \A[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N1
cycloneive_io_ibuf \EN~input (
	.i(EN),
	.ibar(gnd),
	.o(\EN~input_o ));
// synopsys translate_off
defparam \EN~input .bus_hold = "false";
defparam \EN~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y10_N16
cycloneive_lcell_comb \S~0 (
// Equation(s):
// \S~0_combout  = \A[0]~input_o  $ (\EN~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(\A[0]~input_o ),
	.datad(\EN~input_o ),
	.cin(gnd),
	.combout(\S~0_combout ),
	.cout());
// synopsys translate_off
defparam \S~0 .lut_mask = 16'h0FF0;
defparam \S~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X0_Y7_N1
cycloneive_io_ibuf \A[1]~input (
	.i(A[1]),
	.ibar(gnd),
	.o(\A[1]~input_o ));
// synopsys translate_off
defparam \A[1]~input .bus_hold = "false";
defparam \A[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y10_N2
cycloneive_lcell_comb \S~1 (
// Equation(s):
// \S~1_combout  = \A[1]~input_o  $ (((\A[0]~input_o  & \EN~input_o )))

	.dataa(\A[0]~input_o ),
	.datab(gnd),
	.datac(\A[1]~input_o ),
	.datad(\EN~input_o ),
	.cin(gnd),
	.combout(\S~1_combout ),
	.cout());
// synopsys translate_off
defparam \S~1 .lut_mask = 16'h5AF0;
defparam \S~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X0_Y10_N22
cycloneive_io_ibuf \A[2]~input (
	.i(A[2]),
	.ibar(gnd),
	.o(\A[2]~input_o ));
// synopsys translate_off
defparam \A[2]~input .bus_hold = "false";
defparam \A[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y10_N4
cycloneive_lcell_comb \S~2 (
// Equation(s):
// \S~2_combout  = \A[2]~input_o  $ (((\A[0]~input_o  & (\A[1]~input_o  & \EN~input_o ))))

	.dataa(\A[0]~input_o ),
	.datab(\A[2]~input_o ),
	.datac(\A[1]~input_o ),
	.datad(\EN~input_o ),
	.cin(gnd),
	.combout(\S~2_combout ),
	.cout());
// synopsys translate_off
defparam \S~2 .lut_mask = 16'h6CCC;
defparam \S~2 .sum_lutc_input = "datac";
// synopsys translate_on

assign S[0] = \S[0]~output_o ;

assign S[1] = \S[1]~output_o ;

assign S[2] = \S[2]~output_o ;

endmodule
